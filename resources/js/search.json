[[{"l":"Welcome","p":["About Me:","Hi, I'm Nijith Wilson, a passionate newcomer in the field of cybersecurity, currently focusing on self-learning malware analysis, participating in CTFs, and expanding my expertise. I hold certifications including CEH v12 and ADCD, with plans to earn more in the near future.","What I Do:","My work primarily revolves around:","Red Teaming","OSINT (Open Source Intelligence)","CTFs (Capture the Flag challenges)","Malware Analysis","If you're interested in collaborating with me or my community Project E or any projects, feel free to reach out via email at nijithwilson@gmail.com.","If Any Link Is Broken, Report On Discussion"]}],[{"l":"100 Days of Cyber Security"}],[{"l":"Day 01"}],[{"l":"Linux"}],[{"l":"Getting Help with Linux Commands","p":["When working with Linux, encountering unfamiliar tools or options is common. Fortunately, there are several ways to get help and understand how to use these tools effectively. This guide covers essential methods for seeking help, including using man pages, help functions, and additional resources."]},{"l":"Using Man Pages","p":["Man pages, short for manual pages, provide detailed documentation on commands and their options. They are an invaluable resource for understanding how to use various tools and commands."]},{"l":"Syntax","p":["To access the man page for a tool, use the following command:"]},{"l":"Example","p":["To get help with the curl command, you would use:","The output will provide a comprehensive overview of the tool, including its name, synopsis, and detailed description of its options and usage. For instance:"]},{"l":"Using Help Functions","p":["Most commands also have a built-in help option that provides a summary of available options and their usage. This can be quicker than browsing through the full man page."]},{"i":"syntax-1","l":"Syntax","p":["To access the help function for a tool, use:"]},{"i":"example-1","l":"Example","p":["For curl, you can use:","This command will display a summary of usage options:"]},{"l":"Short Version","p":["Many tools also support a shorter help flag:"]},{"i":"example-2","l":"Example","p":["This will yield similar information to the --help option."]},{"l":"Using apropos","p":["When you're unsure of the exact command name, apropos can search the manual page descriptions for keywords. This helps in finding relevant commands related to your needs."]},{"i":"syntax-2","l":"Syntax"},{"i":"example-3","l":"Example","p":["To find commands related to sudo, use:","The output will list related commands and their descriptions:"]},{"l":"Additional Resources","p":["For further assistance with understanding complex commands, you can use online tools such as Explain Shell. This resource helps in breaking down and explaining the components of a command."]}],[{"i":"comprehensive-guide-to-linux-distributions-discovering-the-best-options","l":"Comprehensive Guide to Linux Distributions: Discovering the Best Options","p":["Linux distributions, or distros, are diverse operating systems built on the Linux kernel, serving a wide array of applications from web servers to desktop computers and mobile devices. Each distribution offers unique features, tools, and packages tailored for different needs. Whether you're a cybersecurity expert, a developer, or a desktop user, there's a Linux distro for you."]},{"l":"Popular Linux Distributions"},{"l":"Ubuntu","p":["Ubuntu is a user-friendly Linux distribution popular among desktop users and beginners. Its ease of use and extensive support make it a top choice for those new to Linux."]},{"l":"Fedora","p":["Fedora is known for its cutting-edge technology and frequent updates, making it ideal for those who want the latest features and improvements."]},{"l":"CentOS","p":["CentOS, a free alternative to Red Hat Enterprise Linux, is widely used in server environments for its stability and long-term support."]},{"l":"Debian","p":["Debian is renowned for its stability and reliability, making it a preferred choice for servers and embedded systems. Its robust package management system ( apt) ensures seamless updates and security patches."]},{"l":"Red Hat Enterprise Linux","p":["Red Hat Enterprise Linux is favored in enterprise environments for its comprehensive support and advanced features."]},{"l":"Linux Distributions for Cybersecurity","p":["For cybersecurity specialists, certain Linux distributions are specifically designed with advanced tools and security features. Some notable mentions include:","ParrotOS: A security-focused distro with a variety of penetration testing tools.","BackBox: Offers a robust set of tools for forensic analysis and vulnerability assessment.","BlackArch: Known for its extensive collection of security tools.","Pentoo: A live CD with a focus on penetration testing and security assessments.","Kali Linux: The most popular distro for cybersecurity professionals, featuring a wide array of security tools and utilities."]},{"i":"debian-a-closer-look","l":"Debian: A Closer Look","p":["Debian stands out for its stability, reliability, and long-term support, making it a go-to choice for servers and critical systems. It uses the Advanced Package Tool ( apt) for efficient software management, ensuring that security updates and patches are applied promptly.","While Debian might present a steeper learning curve compared to some other distributions, its flexibility and control make it a powerful option for advanced users. Its strong commitment to security and privacy further enhances its appeal for cybersecurity applications."]},{"l":"Conclusion","p":["Linux distributions offer a range of options for various needs, from desktop use to enterprise environments and specialized cybersecurity tasks. Ubuntu and Debian are excellent choices for different purposes, with Debian being particularly suited for those seeking stability and advanced customization. For cybersecurity professionals, distributions like Kali Linux, ParrotOS, and BlackArch provide the tools needed for effective security assessments.","Explore these Linux distributions to find the one that best fits your requirements and enjoy the benefits of a customizable, secure, and reliable operating system."]}],[{"l":"Linux File Permissions"},{"i":"a-deep-dive-into-linux-file-permissions-understanding-and-managing-access","l":"A Deep Dive into Linux File Permissions: Understanding and Managing Access","p":["Understanding Linux file permissions is essential for system security and effective file management. Permissions control who can access or modify files and directories. In Linux, file permissions can be represented in two ways: symbolic mode and octal mode. This guide will help you grasp these concepts with clear examples and explanations."]},{"l":"1. Symbolic Mode Permissions","p":["In symbolic mode, file permissions are displayed in a string of characters. This format shows the type of file and the access rights for the owner, group, and others."]},{"l":"Structure of File Permissions","p":["-: No permission","-: Regular file","1. File Type","2. Owner Permissions","3. Group Permissions","4. Other Users' Permissions","b: Block device","c: Character device","d: Directory","First Character: Indicates the file type.","Here’s how a typical file listing might look:","l: Symbolic link","Last Three Characters: Permissions for all other users.","Next Three Characters: Permissions for the file owner.","Next Three Characters: Permissions for the file’s group.","p: Named pipe","r: Read (view contents)","s: Socket","Same as owner permissions ( r, w, x, -)","w: Write (modify contents)","x: Execute (run as a program or enter a directory)"]},{"l":"Examples","p":["-rw-r--r--(for example_file.txt):","-: Regular file","rw-: Owner ( root) can read and write.","r--: Group ( root) can read only.","r--: Others can read only.","drwxr-xr-x(for example_dir):","d: Directory","rwx: Owner can read, write, and execute.","r-x: Group can read and execute.","r-x: Others can read and execute."]},{"i":"2-octal-numeric-mode-permissions","l":"2. Octal (Numeric) Mode Permissions","p":["In octal mode, permissions are represented by a three-digit number. Each digit corresponds to the permissions for the owner, group, and others."]},{"l":"Understanding Octal Values","p":["r(Read) = 4","w(Write) = 2","x(Execute) = 1","To represent different permissions, you add these values together:","rwx= 4 + 2 + 1 = 7","rw-= 4 + 2 + 0 = 6","r--= 4 + 0 + 0 = 4"]},{"l":"Converting Symbolic to Octal","p":["-rw-r--r--:","Owner ( rw-): 4 + 2 = 6","Group ( r--): 4 + 0 = 4","Others ( r--): 4 + 0 = 4","Octal Representation: 644","drwxr-xr-x:","Owner ( rwx): 4 + 2 + 1 = 7","Group ( r-x): 4 + 0 + 1 = 5","Others ( r-x): 4 + 0 + 1 = 5","Octal Representation: 755"]},{"l":"3. Changing Permissions","p":["You can modify file permissions using both symbolic and octal modes."]},{"l":"Using Symbolic Mode","p":["Add Permission: chmod u+x file.sh","u: User (owner)","+x: Adds execute permission","Remove Permission: chmod g-w file.sh","g: Group","-w: Removes write permission","Set Exact Permissions: chmod u=rwx,g=rx,o=r file.sh","Sets specific permissions for user, group, and others."]},{"l":"Using Octal Mode","p":["Set Permissions: chmod 755 file.sh","755 translates to rwxr-xr-x:","Owner: rwx(7)","Group: r-x(5)","Others: r-x(5)"]},{"l":"4. Summary of File Listing Columns","p":["In a file listing:","Column 1: Permissions ( drwxr-xr-x or -rw-r--r--)","Column 2: Number of hard links ( 2 or 1)","Column 3: Owner ( root)","Column 4: Group ( root)","Column 5: Size ( 4.0K or 19)","Column 6: Last modification date and time ( Sep 18 10:46)","Column 7: File or directory name ( example_dir or example_file.txt)","Grasping Linux file permissions is vital for maintaining system security and managing file access. By understanding both symbolic and octal modes, you can effectively control who has access to your files and directories. Mastering these concepts ensures you can protect your data and manage your Linux environment efficiently."]}],[{"i":"#","p":["Explore the essential directories and files within the Linux file system, understanding their roles and significance."]},{"l":"Linux File Sytem"},{"l":"Introduction","p":["The Linux file system is the heart of any Unix-like operating system, crucial for users and system administrators. In this guide, we'll explore the root directory and its subdirectories and files, unveiling their significance in the Linux ecosystem.","Root Directory Structure"]},{"i":"bin-essential-system-binaries","l":"/bin (Essential system binaries)","p":["The /bin directory contains fundamental system binaries:","ls: Lists directory contents.","cp: Copies files and directories.","mv: Moves or renames files and directories.","rm: Removes files and directories.","mkdir: Creates directories."]},{"i":"boot-boot-related-files","l":"/boot (Boot-related files)","p":["The /boot directory holds crucial files for the boot process:","vmlinuz: Contains the Linux kernel image.","initrd: Initial RAM disk image used during boot."]},{"i":"dev-device-files","l":"/dev (Device files)","p":["The /dev directory contains device files:","block: Device files for block devices like hard drives.","char: Device files for character devices like keyboards."]},{"i":"etc-system-wide-configuration-files","l":"/etc (System-wide configuration files)","p":["The /etc directory stores system-wide configuration files:","fstab: Defines file system mount configurations.","ssh: Configuration files for SSH server.","network: Defines network settings."]},{"i":"home-user-home-directories","l":"/home (User home directories)","p":["The /home directory stores user-specific home directories:",".bashrc: User's Bash shell configuration.","notes.txt: Sample file for personal notes."]},{"i":"lib-shared-libraries","l":"/lib (Shared libraries)","p":["The /lib directory contains shared libraries crucial for software operation."]},{"i":"media-mount-point-for-removable-media","l":"/media (Mount point for removable media)","p":["The /media directory is where removable media is automatically mounted."]},{"i":"mnt-temporary-mount-point","l":"/mnt (Temporary mount point)","p":["The /mnt directory is used for temporary external file system mounts."]},{"i":"opt-optional-software-packages","l":"/opt (Optional software packages)","p":["The /opt directory is for optional software packages."]},{"i":"proc-virtual-filesystem-for-process-information","l":"/proc (Virtual filesystem for process information)","p":["The /proc directory provides real-time process information."]},{"i":"root-root-users-home-directory","l":"/root (Root user’s home directory)","p":["The /root directory is the root user's home directory."]},{"i":"run-run-time-variable-data","l":"/run (Run-time variable data)","p":["The /run directory stores temporary runtime data."]},{"i":"sbin-system-binaries-for-system-administration","l":"/sbin (System binaries for system administration)","p":["The /sbin directory contains binaries for system administration."]},{"i":"srv-service-data","l":"/srv (Service data)","p":["The /srv directory stores data related to system services."]},{"i":"sys-kernel-related-files","l":"/sys (Kernel-related files)","p":["The /sys directory contains kernel-related files."]},{"i":"tmp-temporary-files","l":"/tmp (Temporary files)","p":["The /tmp directory stores temporary files."]},{"i":"usr-user-programs-and-data","l":"/usr (User programs and data)","p":["The /usr directory contains user programs and data."]},{"i":"var-variable-data-files","l":"/var (Variable data files)","p":["The /var directory contains variable data files."]},{"l":"Conclusion","p":["Understanding the Linux file system structure is crucial. While most files shouldn't be modified without proper knowledge, customization in /etc and /home can be done cautiously. Always back up to avoid unintended consequences."]}],[{"i":"linux-for-penetration-testers-a-vital-tool-for-cybersecurity","l":"Linux for Penetration Testers: A Vital Tool for Cybersecurity","p":["Linux is a critical tool for penetration testing, a method used by cybersecurity professionals to identify and exploit potential security weaknesses in systems. Penetration testing, often called ethical hacking, simulates real-world cyberattacks to assess the effectiveness of an organization’s security measures. This process helps identify vulnerabilities, allowing security teams to strengthen their defenses. Penetration testing plays an essential role in safeguarding against cyber threats, making it an indispensable component of enterprise security practices."]},{"i":"from-unix-to-linux-the-evolution-of-operating-systems-for-cybersecurity","l":"From Unix to Linux: The Evolution of Operating Systems for Cybersecurity","p":["Both Unix and Linux have shaped the modern landscape of cybersecurity, each offering unique advantages. However, they differ in origin, design, and usage. Let's break down the key aspects of both operating systems and understand how they contribute to penetration testing and overall security."]},{"i":"unix-vs-linux-key-differences-for-cybersecurity","l":"Unix vs. Linux: Key Differences for Cybersecurity","p":["Commercial and often costly","Cost","Customization","Designed for larger systems","Developed at AT&T Bell Labs in the 1960s","Developed by Linus Torvalds in 1991","Distributions","Feature","Flavors from various vendors (AIX, Solaris)","Free (many distributions available)","Fully open source (GPL - General Public License)","Hardware","Highly customizable and flexible","License","Limited, vendor-specific","Linux","Mostly proprietary, though some open-source","Multiple distributions (Ubuntu, Red Hat, etc.)","Origin","Runs on a wide range of hardware","Specialized enterprise environments","Unix","Usage","Widely used in servers, desktops, IoT, etc."]},{"l":"Why Linux is Preferred for Penetration Testing","p":["Linux has become the dominant platform for penetration testing for several reasons:","Open Source: Linux’s open-source nature allows cybersecurity professionals to modify the operating system to suit their needs, which is essential for developing and using penetration testing tools.","Security Distributions: Many Linux distributions are specifically designed for penetration testing. The most notable example is Kali Linux, which comes pre-installed with numerous tools tailored for ethical hacking and security testing.","Wide Tool Availability: Linux distributions offer a vast range of tools for penetration testing, such as Nmap, Wireshark, Metasploit, and John the Ripper.","Community Support: The large Linux community ensures that penetration testers always have access to the latest tools, support, and updates, helping them stay ahead of emerging threats.","Adaptability: Linux can be deployed across a wide range of hardware, from high-end servers to low-power devices, making it suitable for testing in any environment."]},{"l":"Linux Structure"},{"l":"History","p":["Many events led up to creating the first Linux kernel and, ultimately, the Linux operating system (OS), starting with the Unix operating system's release by Ken Thompson and Dennis Ritchie (whom both worked for AT&T at the time) in 1970. The Berkeley Software Distribution (BSD) was released in 1977, but since it contained the Unix code owned by AT&T, a resulting lawsuit limited the development of BSD. Richard Stallman started the GNU project in 1983. His goal was to create a free Unix-like operating system, and part of his work resulted in the GNU General Public License (GPL) being created. Projects by others over the years failed to result in a working, free kernel that would become widely adopted until the creation of the Linux kernel.","At first, Linux was a personal project started in 1991 by a Finnish student named Linus Torvalds. His goal was to create a new, free operating system kernel. Over the years, the Linux kernel has gone from a small number of files written in C under licensing that prohibited commercial distribution to the latest version with over 23 million source code lines (comments excluded), licensed under the GNU General Public License v2.","Linux is available in over 600 distributions (or an operating system based on the Linux kernel and supporting software and libraries). Some of the most popular and well-known being Ubuntu, Debian, Fedora, OpenSUSE, elementary, Manjaro, Gentoo Linux, RedHat, and Linux Mint.","Linux is generally considered more secure than other operating systems, and while it has had many kernel vulnerabilities in the past, it is becoming less and less frequent. It is less susceptible to malware than Windows operating systems and is very frequently updated. Linux is also very stable and generally affords very high performance to the end-user. However, it can be more difficult for beginners and does not have as many hardware drivers as Windows.","Since Linux is free and open-source, the source code can be modified and distributed commercially or non-commercially by anyone. Linux-based operating systems run on servers, mainframes, desktops, embedded systems such as routers, televisions, video game consoles, and more. The overall Android operating system that runs on smartphones and tablets is based on the Linux kernel, and because of this, Linux is the most widely installed operating system.","Linux is an operating system like Windows, iOS, Android, or macOS. An OS is software that manages all of the hardware resources associated with our computer. That means that an OS manages the whole communication between software and hardware. Also, there exist many different distributions (distro). It is like a version of Windows operating systems.","With the interactive instances, we get access to the Pwnbox, a customized version of Parrot OS. This will be the primary OS we will work with through the modules. Parrot OS is a Debian-based Linux distribution that focuses on security, privacy, and development."]},{"l":"Philosophy","p":["Linux follows five core principles:","Principle","Description","Everything is a file","All configuration files for the various services running on the Linux operating system are stored in one or more text files.","Small, single-purpose programs","Linux offers many different tools that we will work with, which can be combined to work together.","Ability to chain programs together to perform complex tasks","The integration and combination of different tools enable us to carry out many large and complex tasks, such as processing or filtering specific data results.","Avoid captive user interfaces","Linux is designed to work mainly with the shell (or terminal), which gives the user greater control over the operating system.","Configuration data stored in a text file","An example of such a file is the /etc/passwd file, which stores all users registered on the system."]},{"l":"Components","p":["A piece of code that runs to guide the booting process to start the operating system. Parrot Linux uses the GRUB Bootloader.","Also known as a graphical user interface (GUI). There are many options, including GNOME, KDE, MATE, Unity, and Cinnamon. A desktop environment usually has several applications, including file and web browsers. These allow the user to access and manage the essential and frequently accessed features and services of an operating system.","Applications or utilities are programs that perform particular functions for the user or another program.","Background services are called \"daemons\" in Linux. Their purpose is to ensure that key functions such as scheduling, printing, and multimedia are working correctly. These small programs load after we booted or log into the computer.","Bootloader","Component","Daemons","Description","Graphics server","OS Kernel","OS Shell","The kernel is the main component of an operating system. It manages the resources for system's I/O devices at the hardware level.","The operating system shell or the command language interpreter (also known as the command line) is the interface between the OS and the user. This interface allows the user to tell the OS what to do. The most commonly used shells are Bash, Tcsh/Csh, Ksh, Zsh, and Fish.","This provides a graphical sub-system (server) called \"X\" or \"X-server\" that allows graphical programs to run locally or remotely on the X-windowing system.","Utilities","Window Manager"]},{"l":"Linux Architecture","p":["The Linux operating system can be broken down into layers:","Layer","Description","Hardware","Peripheral devices such as the system's RAM, hard drive, CPU, and others.","Kernel","The core of the Linux operating system whose function is to virtualize and control common computer hardware resources like CPU, allocated memory, accessed data, and others. The kernel gives each process its own virtual resources and prevents/mitigates conflicts between different processes.","Shell","A command-line interface ( CLI), also known as a shell that a user can enter commands into to execute the kernel's functions.","System Utility","Makes available to the user all of the operating system's functionality."]}],[{"l":"Linux Shortcuts"},{"l":"Essential Keyboard Shortcuts for Terminal Efficiency","p":["Alt + B","Alt + Backspace","Alt + D","Alt + F","Clears the terminal screen.","Closes the current tab (in some terminal emulators).","Copies selected text to the clipboard.","Ctrl + A","Ctrl + B","Ctrl + C","Ctrl + D","Ctrl + E","Ctrl + F","Ctrl + H","Ctrl + J","Ctrl + K","Ctrl + L","Ctrl + N","Ctrl + P","Ctrl + Q","Ctrl + R","Ctrl + S","Ctrl + Shift + C","Ctrl + Shift + T","Ctrl + Shift + V","Ctrl + Shift + W","Ctrl + T","Ctrl + U","Ctrl + V","Ctrl + W","Ctrl + X","Ctrl + Y","Ctrl + Z","Cuts the current line or selection (in editors like nano).","Deletes from the cursor to the beginning of the line.","Deletes from the cursor to the end of the line.","Deletes the character before the cursor (similar to Backspace).","Deletes the word after the cursor.","Deletes the word before the cursor.","Description","Inserts a newline (similar to pressing Enter).","Interrupts the current process or command.","Logs out of the current shell session or closes the terminal tab.","Moves the cursor backward one character.","Moves the cursor backward one word.","Moves the cursor forward one character.","Moves the cursor forward one word.","Moves the cursor to the beginning of the line.","Moves the cursor to the end of the line.","Navigating the command line can be streamlined with the right keyboard shortcuts. Whether you’re a seasoned developer or just getting started, mastering these key combinations can significantly boost your productivity and efficiency. Here’s a comprehensive list of essential keyboard shortcuts for terminal use:","Opens a new tab in the terminal (in some terminal emulators).","Pastes text from the clipboard into the terminal.","Pastes text from the clipboard.","Pastes the last deleted text (after using Ctrl + U, Ctrl + K, or Ctrl + W).","Pauses the terminal output.","Recalls the next command from history.","Recalls the previous command from history.","Resumes the terminal output (used after Ctrl + S).","Searches through command history.","Shortcut","Suspends the current process and sends it to the background.","Swaps the character under the cursor with the one before it.","This table provides a clear and organized overview of key terminal shortcuts to help enhance your productivity."]}],[{"l":"Introduction to the Linux Shell","p":["Understanding how to use the Linux shell is essential, especially since many servers run on Linux due to its stability and lower error rates compared to Windows. For instance, web servers commonly use Linux for its robustness and reliability. Mastery of the shell is crucial for effective system control and management."]},{"i":"what-is-the-shell","l":"What is the Shell?","p":["The Linux shell, also known as the terminal or command line, is a text-based interface that allows users to interact with the system’s kernel. Unlike graphical user interfaces (GUIs), the shell operates through textual input and output. It provides a powerful means to perform system operations, from navigating directories and managing files to executing complex commands and scripts.","When transitioning from Windows to Linux, the terminal might seem unfamiliar, but it’s an integral tool for system control and automation. Here's a visual of a typical Linux terminal:","Linux Terminal"]},{"l":"Terminal Emulators","p":["Terminal emulators are software applications that emulate a traditional terminal within a graphical user interface (GUI). They allow users to run text-based programs in a windowed environment. Terminal multiplexers, like tmux, extend terminal functionality by enabling multiple sessions within a single terminal window. This can enhance productivity by allowing users to manage multiple tasks simultaneously."]},{"l":"Shell Options","p":["The most commonly used shell in Linux is the Bourne-Again Shell(BASH), which is part of the GNU project. BASH is highly versatile, allowing users to perform tasks that range from simple file manipulations to complex system administration tasks. It also supports scripting, which can automate repetitive tasks.","Other notable shells include:","Tcsh/Csh: An enhanced version of the C shell with additional features.","Ksh: Known for its powerful scripting capabilities.","Zsh: Offers advanced features and extensive customization options.","Fish: Known for its user-friendly design and interactive features."]},{"l":"Understanding the Prompt","p":["The shell prompt is the text displayed in the terminal that indicates the system is ready for input. It typically includes the username, hostname, and current working directory. The default format of the prompt often looks like this:","When logged in as a regular user, the prompt ends with a dollar sign $. For example:","When logged in as the root user, the prompt ends with a hash symbol #, indicating elevated privileges:","If the environment variable PS1(which defines the prompt format) is not set correctly, the prompt may appear simpler:"]},{"l":"Unprivileged User Shell Prompt"},{"l":"Privileged Root Shell Prompt"},{"l":"Customizing the Prompt","p":["\\@","\\d","\\D{%Y-%m-%d}","\\H","\\j","\\n","\\r","\\s","\\t","\\u","\\w","Carriage return","Current time","Current time (12-hour)","Current time (24-hour)","Current username","Customizing the shell prompt can enhance your productivity by displaying useful information. You can modify the prompt to include details such as the date, time, and exit status of the last command. This is particularly beneficial for penetration testing and system monitoring.","Date (e.g., Mon Feb 6)","Date (e.g., YYYY-MM-DD)","Description","For more detailed customization, you can use tools like bash-prompt-generator and Powerline.","Full hostname","Full path of current directory","Here’s a breakdown of special characters you can use to customize your prompt:","Newline","Number of jobs managed","Shell name","Special Character"]}],[{"i":"logging-in-via-ssh-and-navigating-linux-a-comprehensive-guide","l":"Logging In via SSH and Navigating Linux: A Comprehensive Guide","p":["Secure Shell (SSH) is a protocol that allows clients to access and execute commands on remote computers securely. On Linux-based hosts and servers, SSH is a standard tool that administrators prefer for remote management. Unlike graphical user interfaces (GUIs), SSH is lightweight and resource-efficient, making it ideal for command-line operations. In this guide, we will cover how to log in via SSH and navigate the Linux filesystem effectively."]},{"l":"Logging In via SSH","p":["To connect to a remote system using SSH, use the following command:","Replace [username] with your actual username and [IP address] with the remote system's IP address. This command will establish a secure connection, allowing you to manage the remote machine from your terminal."]},{"l":"Navigation","p":["Navigating the Linux filesystem is as essential as using a mouse in Windows. Here, we will explore commands for printing information about directories and files and discuss various techniques to enhance your navigation experience."]},{"l":"Finding Your Current Directory","p":["Before moving through the system, you need to know your current location. Use the pwd(print working directory) command to find out:"]},{"l":"Listing Directory Contents","p":["To list all contents in your current directory, use the ls command:","For more detailed information about each file and directory, use the -l option:"]},{"l":"Understanding the Output","p":["2","4096","Column Content","cry0l1t3","Date and time of last modification","Description","Desktop","drwxr-xr-x","Group owner of the file/directory","htbacademy","Name of the file or directory","Nov 13 17:37","Number of hard links to the file/directory","Owner of the file/directory","Size of the file or number of blocks used","The ls -l command shows the following columns:","Type and permissions"]},{"l":"Viewing Hidden Files","p":["Directories may contain hidden files that start with a dot (e.g., .bashrc). To list all files, including hidden ones, use:"]},{"l":"Navigating to Different Directories","p":["To navigate to a specific directory, use the cd command. For example, to change to the /dev/shm directory:","You can also jump back to your previous directory with:"]},{"l":"Auto-Completion and Command Shortcuts","p":["The shell provides an auto-completion feature to make navigation easier. For instance, if you type cd /dev/s and press [TAB] twice, it will show available options like shm and snd.","To clean your terminal screen, use:","You can also use the shortcut [Ctrl] + [L]. To scroll through your command history, use the arrow keys, or search for specific commands with [Ctrl] + [R]."]},{"l":"Listing Directory Contents Without Changing Directory","p":["You can list the contents of a directory without navigating there first. For example, to view the contents of the /var directory:"]},{"l":"Moving Back to Parent Directories","p":["To return to the parent directory, use:"]},{"l":"Conclusion","p":["Mastering SSH and essential navigation commands in Linux is vital for effective system management. By practicing these commands and tips, you can navigate the Linux filesystem with confidence and efficiency.","For further learning, I recommend experimenting on a local virtual machine (VM) and creating snapshots for safety. This hands-on experience will reinforce your understanding and help you become proficient in Linux system administration."]}],[{"l":"Essential Linux Commands for System Information","p":["When working with various Linux systems, understanding their structure and gathering information about processes, network configurations, users, directories, and settings is crucial. This guide covers essential commands for retrieving system information, commonly available across most Linux distributions."]},{"l":"Key Linux Commands for System Information","p":["Command","Configures or displays network interface parameters.","Description","Displays logged-in users.","Displays network status and connections.","Displays the current username.","env","hostname","id","ifconfig","Investigates socket statuses.","ip","Lists information about block devices.","Lists open files and the processes that opened them.","Lists PCI devices connected to the system.","Lists USB devices connected to the system.","lsblk","lsof","lspci","lsusb","Manages routing, network devices, and interfaces.","netstat","Prints environment variables or executes commands.","Provides basic information about the operating system and hardware.","ps","pwd","Returns the current working directory.","Returns user identity, including group memberships and IDs.","Sets or prints the name of the current host system.","Shows information about running processes.","ss","uname","who","whoami"]},{"l":"Practical Examples of System Information Commands"},{"l":"1. Hostname","p":["The hostname command displays the name of the computer you are currently using:"]},{"l":"2. Whoami","p":["The whoami command reveals your current username, essential for security assessments:"]},{"l":"3. Id","p":["The id command provides detailed identity information, including user ID (UID), group ID (GID), and group memberships:"]},{"l":"4. Uname","p":["The uname command offers system information. Use the -a flag to print all available details:"]},{"l":"5. Kernel Release","p":["To obtain just the kernel release version, use:"]},{"l":"Additional Tips for Using Linux Commands","p":["Consult Man Pages: For detailed command information and options, use the man command (e.g., man uname).","Explore Command Options: Experiment with commands and check their help options (--help or -h) for better understanding.","Understanding these commands is vital for managing Linux systems, conducting security assessments, and performing privilege escalation techniques. Familiarizing yourself with these tools will enhance your ability to efficiently gather vital system information."]},{"l":"Optional Exercises to Enhance Your Skills","p":["To reinforce your command-line skills, try the following exercises:","Use hostname to find your current system's name.","Execute whoami and id to identify your user and group memberships.","Run uname -a and uname -r to gather detailed system and kernel information.","Explore network configurations using ifconfig and ip.","List USB devices with lsusb and PCI devices with lspci.","These exercises will help you become proficient in retrieving and interpreting system information, boosting your overall Linux command-line skills."]}],[{"l":"CVE"}],[{"l":"CVE-2022-0847"},{"i":"the-dirty-pipe-vulnerability","l":"The \"Dirty Pipe\" Vulnerability","p":["CVE-2022-0847, popularly known as the \"Dirty Pipe\" vulnerability, is one of the most significant Linux kernel vulnerabilities discovered in recent years. This case study provides an in-depth analysis, including its technical background, impact, exploitation process, and mitigation strategies."]},{"l":"1. Background of CVE-2022-0847","p":["Vulnerability Name: Dirty Pipe","CVE ID: CVE-2022-0847","Date Discovered: February 2022","Discovered By: Max Kellermann","Severity Level: High (Privilege Escalation)","Affected Kernel Versions: Linux Kernel 5.8 and later, including some versions of 5.10.x and 5.15.x.","Nature of Vulnerability: Unauthorized file modification leading to privilege escalation."]},{"i":"11-discovery-of-the-vulnerability","l":"1.1. Discovery of the Vulnerability","p":["The vulnerability was discovered by Max Kellermann when investigating a bug report related to the corruption of access logs on a Linux server. Kellermann identified that the root cause was related to how the Linux kernel managed pipes and allowed for incorrect data modification of read-only files."]},{"i":"12-systems-affected","l":"1.2. Systems Affected","p":["Dirty Pipe affects Linux distributions running the vulnerable versions of the kernel, including but not limited to:","Ubuntu","Debian","Fedora","Arch Linux","Any other distribution using affected kernel versions."]},{"l":"2. Technical Details","p":["The Dirty Pipe vulnerability arises from an improper handling of pipe buffers in the Linux kernel, particularly when merging pages from the buffer cache into the pipe buffer. This process lacks adequate validation checks, allowing data to be inserted or altered even in read-only files."]},{"i":"21-how-it-works","l":"2.1. How It Works","p":["Pipe Buffers: Pipes in Linux are temporary data conduits often used for communication between processes. They use memory buffers managed by the kernel.","Page Cache: The kernel uses page cache to improve file access efficiency by storing frequently accessed data in memory. A flaw in the way the kernel merges data from the page cache into the pipe buffer forms the basis of this vulnerability.","Exploit Mechanism:","By carefully crafting inputs into the pipe buffer, an attacker can inject data into read-only files.","This can be done without write permissions because the exploit manipulates the buffer state directly within the kernel.","Specific Flaw:","If a pipe buffer is created with specific conditions, the vulnerability allows writing arbitrary data into a target file.","This happens because of a missing check that allows unprivileged users to map writable pages into the read-only page cache."]},{"l":"3. Exploit Scenario","p":["This section details a proof-of-concept (PoC) demonstrating how CVE-2022-0847 can be exploited for privilege escalation."]},{"i":"31-exploitation-requirements","l":"3.1. Exploitation Requirements","p":["A vulnerable Linux kernel (5.8 or later, specific affected versions).","Local access to the system (remote exploitation would require another vector for local access).","Basic programming knowledge to execute crafted payloads."]},{"i":"32-exploit-proof-of-concept-code","l":"3.2. Exploit Proof-of-Concept Code","p":["Below is a simplified PoC exploit script in C, demonstrating how an unprivileged user can modify the contents of the /etc/passwd file to escalate privileges."]},{"i":"33-steps-of-the-exploit","l":"3.3. Steps of the Exploit","p":["Create a Pipe: The exploit starts by creating a pipe to facilitate communication between two file descriptors.","Splice Data: It splices data from the targeted file (e.g., /etc/passwd) into the pipe. This step manipulates the internal state of the pipe buffer.","Inject Malicious Payload: It then injects crafted payload data into the pipe, which results in unauthorized modification of the file.","Privilege Escalation: Once the /etc/passwd file is modified, the attacker gains unauthorized root access."]},{"l":"4. Impact Analysis","p":["The Dirty Pipe vulnerability's impact is substantial due to the ease with which it can be exploited and the high privilege escalation it provides."]},{"i":"41-security-implications","l":"4.1. Security Implications","p":["Unauthorized Access: Allows an unprivileged user to gain root access.","Data Corruption: Allows the modification of read-only files, which could disrupt critical system operations.","Persistence: Attackers can create backdoors for persistent unauthorized access."]},{"i":"42-potential-targets","l":"4.2. Potential Targets","p":["Web Servers: Injecting malicious content into configuration files.","Containers: Breaking out of containerized environments to access the host system.","Embedded Devices: Routers, IoT devices using vulnerable kernels could be exploited similarly."]},{"l":"5. Mitigation and Patching"},{"i":"51-patch-release","l":"5.1. Patch Release","p":["Kernel Updates: The vulnerability was patched in kernel versions 5.10.102, 5.15.25, and 5.16.11. All users are advised to update to these versions or later to mitigate the vulnerability."]},{"i":"52-mitigation-steps","l":"5.2. Mitigation Steps","p":["Update the Kernel: Ensure that all systems are running a patched kernel version.","Restrict User Access: Limit the creation of untrusted user accounts on sensitive systems.","Monitor System Logs: Use intrusion detection systems to monitor for unusual access patterns or file modifications.","Apply Security Patches Promptly: Regularly update all systems with the latest security patches to prevent known exploits."]},{"l":"6. Conclusion","p":["CVE-2022-0847 \"Dirty Pipe\" is a critical vulnerability that underscores the importance of robust validation in kernel-level operations. The flaw's ability to easily escalate privileges highlights the need for immediate patching and vigilant system monitoring. As Linux systems are widely used across various industries, from enterprise servers to embedded devices, the impact of this vulnerability is far-reaching.","System administrators must ensure timely updates and employ best security practices to safeguard their systems against such critical vulnerabilities. The Dirty Pipe incident also serves as a reminder of the ongoing need for proactive vulnerability management in complex software ecosystems."]}],[{"l":"E Books"}],[{"l":"Python","p":["Black Hat Python","Black Hat Python, 2nd Edition by Justin Seitz Tim Arnold Justin","Clean Python","Cracking Codes with Python: An Introduction to Building and Breaking","David Amos, Dan Bader, Joanna Jablonski, Fletcher Heisler Python","Hacking with Python: Beginner's Guide to Ethical Hacking, Lane, Evan","How to Code in Python","Learning Python: Building Games Programming","Link","Python Crash Course","Python Crash Course, 2nd Edition: A Hands-On, Project-Based Introduction","Python for Everybody","Python One-liners","Python Succinctly","Python Web Scraping by Katharine Jarmul","Robust Python: Write Clean and Maintainable Code by Patrick Viafore","Thinking in Pandas: How to Use the Python Data Analysis Library","Title","Useful Python Scripts"]}],[{"l":"Linux","p":["Building Secure Servers with Linux","CompTIA Linux+ Powered by Linux Professional Institute Study Guide","Ethical Hacking With Kali Linux: Learn Fast How To Hack Like A Pro","HHS en02: Windows and Linux","How Linux Works: What Every Superuser Should Know","Kali Linux - Assuring Security by Penetration Testing","Kali Linux - WMLUG June 2014","Kali Linux Hack","Kali Linux Network Scanning Cookbook","Kali Linux Using Tutorial","Kali Linux v2 ReYDeS","Kali Linux Windows Penetration Testing","Kali Linux Wireless Hacking","Link","Linux Firewalls Attack Detection","The Linux Programming Interface: A Linux and UNIX System Programming","Title","William E. Shotts Jr. The Linux Command Line: A Complete Introduction"]}],[{"l":"OSINT","p":["Name","Download URL","OSINT Handbook 2020","Download Link","OSINT Techniques Resources"]}],[{"l":"E Courses"}],[{"l":"Bug Bounty","p":["Course Name","Language","Size","Download Link","Bug Bounty Hunting - Udemy Course","English","N/A","D Research Advanced Web Hacking","Bug Bounty PoC's","Udemy - Web Security & Bug Bounty Learn Penetration Testing in 2022"]}],[{"l":"Ethical Hacking","p":["1.75 GB","11.94 GB","2021 Ethical Hacking Course","56.1 GB","62+ GB","A Goldmine of Free Ethical Hacking, Blueteaming and Penetration Testing Coursing","ANDROID Hacking & Penetration Testing: BUG BOUNTY Hunting","Course Name","Download Link","English","Ethical Hacking Masterclass - Comprehensive from Zero to Advanced","Full Ethical Hacking & Penetration Testing Course","Language","Malcolm Shore's Cyber Security Courses until Oct 10, 2019 [Lynda]","N/A","Practical Ethical Hacking From Beginner To Advance","RedRose Blood Hacking Course","Size"]}],[{"l":"Forensics","p":["Course Name","Language","Size","Download Link","Malware Forensics V5 - AI and ChatGPT Mastery In Malware Analysis 2024","English","1.6 GB","eLearnSecurity Certified Digital Forensics Professional (eCDFP)","N/A"]}],[{"l":"General","p":["1.49 GB","500 TB","Azure: AZ 304","CCSP","Cisco Certified CyberOps","Citrix Application and Desktop Virtualization - 7.6","Complete Introduction of Dark&Deep Web (2024)","Course Name","Customer Services","Download Link","Elearn Security Courses ePWD v1 15. Virtual Patching and Intrusion Detection","English","English, French, German","Group Policy","ITIL","Language","Learn Figma User Interface Design Essentials UI UX Design","MCSA - CBT Nuggets","MCSA 2016","MCSA 2019","N/A","Outlook 2016","Outlook 365","SCCM","Size","The Data Scientist Toolbox","UI/UX DESIGN (COMPLETE PACK)","UI/UX FREE COURSES","User Experience Design Essentials - Adobe XD UI UX Design","Windows 10 Courses"]}],[{"l":"IOT","p":["Course Name","Language","Size","Download Link","Internet of Things (IoT) with ESP8266 & Arduino IDE","English","N/A"]}],[{"l":"Scripting","p":["Course Name","Language","Size","Download Link","Powershell Course","English","N/A","C Programming Form Beginner to Expert","The Ultimate 2021 Fullstack Web Development Bootcamp -01","The Ultimate 2021 Fullstack Web Development Bootcamp -02","Learn HTML5 Programming From Scratch","Python A-Z Full Course"]}],[{"l":"All Company Paid Placement Material","p":["100+ Companies","AMCAT","Company/Resource","CTS","Download Link","ELITMUS","EPAM","GATE","INFOSYS","MINDTREE","MPHASIS","RS AGARWAL","Sample C Programs","TALENT BATTLE","TCS","TECH MAHINDRA","TR & HR Preparation","VALUE LABS","WIPRO","ZENQ"]}]]